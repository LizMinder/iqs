#BlueJ class context
comment0.params=id\ isInfected
comment0.target=AbstractAgent(java.lang.String,\ boolean)
comment0.text=\ \n\ Parent-class\ constructor\ for\ an\ agent.\ \ Note\ that\ the\ constructor\n\ for\ the\ extending\ class\ _MUST_\ call\ this\ constructor\ as\ its\ first\n\ statement.\ \n\ \n\ @param\ id\ A\ unique\ ID\ string\ for\ this\ agent\n\ @param\ getInfected\ True\ if\ the\ agent\ is\ initally\ infected,\ false\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ otherwise.\n
comment1.params=time
comment1.target=boolean\ checkInfection(double)
comment1.text=\n\ Check\ to\ see\ if\ the\ agent\ should\ become\ infected\ at\ this\ time.\n\ How\ this\ happens\ differs\ between\ Hosts\ and\ Vectors,\ but\ both\ \n\ need\ to\ be\ able\ to\ do\ this.\ The\ method\ calls\ an\ abstract\ method\n\ to\ do\ the\ Host/Vector\ specific\ checking\ and\ handles\ the\ aspect\n\ of\ the\ checks\ related\ to\ the\ simulation\ engine's\ operation.\n\ \n\ @param\ time\ \ Simulation\ time\ at\ which\ the\ check\ occurs.\n\ \n\ @return\ True\ if\ agent\ becomes\ infected,\ false\ otherwise.\n
comment10.params=t
comment10.target=void\ setNextMoveTime(double)
comment10.text=\n\ Set\ the\ time\ of\ the\ next\ move\ event\ directly.\ Should\ be\ used\ \n\ only\ for\ debugging\ purposes.\ \n\ \n\ @param\ t\ \n
comment11.params=
comment11.target=double\ getNextMoveTime()
comment12.params=
comment12.target=Shelter\ getCurrentShelter()
comment13.params=s
comment13.target=void\ setCurrentShelter(Shelter)
comment14.params=
comment14.target=boolean\ isInfected()
comment14.text=\n\ Returns\ the\ infection\ status\ of\ this\ agent\n\ @return\ the\ infection\ status\n
comment15.params=
comment15.target=boolean\ getInfected()
comment15.text=\n\ Returns\ the\ infection\ status\ for\ this\ agent\n\ \n\ @return\ True\ if\ infected,\ false\ otherwise\n
comment16.params=isInfected
comment16.target=void\ setInfected(boolean)
comment16.text=\n\ Change\ the\ infection\ status\ of\ this\ agent\n\ \n\ @param\ infected\ the\ new\ value\ for\ the\ infection\ status\n
comment17.params=
comment17.target=java.lang.String\ getId()
comment17.text=\n\ @return\ the\ id\n
comment18.params=id
comment18.target=void\ setId(java.lang.String)
comment18.text=\n\ @param\ id\ the\ id\ to\ set\n
comment19.params=
comment19.target=double\ getTimeOfLastEvent()
comment19.text=\n\ @return\ the\ timeOfLastEvent\n
comment2.params=
comment2.target=boolean\ checkInfection()
comment20.params=timeOfLastEvent
comment20.target=void\ setTimeOfLastEvent(double)
comment20.text=\n\ @param\ timeOfLastEvent\ the\ timeOfLastEvent\ to\ set\n
comment21.params=
comment21.target=int\ getTypeOfLastEvent()
comment21.text=\n\ @return\ the\ typeOfLastEvent\n
comment22.params=typeOfLastEvent
comment22.target=void\ setTypeOfLastEvent(int)
comment22.text=\n\ @param\ typeOfLastEvent\ the\ typeOfLastEvent\ to\ set\n
comment23.params=
comment23.target=void\ setNextEvent()
comment24.params=
comment24.target=double\ getNextInterMoveTime()
comment3.params=
comment3.target=java.lang.String\ toString()
comment3.text=\n\ Produce\ a\ string\ representation\ of\ the\ agent.\n\ \n\ @return\ The\ string\ representation.\n
comment4.params=
comment4.target=double\ getTimeOfInfection()
comment5.params=timeToDie
comment5.target=void\ setTimeOfDeath(double)
comment6.params=
comment6.target=double\ getTimeOfDeath()
comment7.params=
comment7.target=double\ getNextEventTime()
comment8.params=
comment8.target=int\ getNextEventType()
comment9.params=
comment9.target=void\ setNextMoveTime()
numComments=25
