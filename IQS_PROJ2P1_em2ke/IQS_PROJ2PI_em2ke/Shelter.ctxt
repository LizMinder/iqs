#BlueJ class context
comment0.params=formal\ showers\ laundry\ medical\ capacity\ theCol\ theRow
comment0.target=Shelter(boolean,\ boolean,\ boolean,\ boolean,\ int,\ int,\ int)
comment1.params=
comment1.target=boolean\ isFull()
comment1.text=\n\ Is\ this\ shelter\ at\ capacity?\n\ \n\ @return\ true\ if\ shelter\ is\ at\ capacity,\ false\ if\ there\ is\ space\n
comment10.params=
comment10.target=int\ getInfestedCount()
comment10.text=\n\ Get\ a\ count\ of\ the\ number\ of\ occupants\ who\ are\ infested\ with\ lice\n\ \n\ @return\ How\ many\ occupants\ are\ infested\ with\ lice.\n
comment11.params=
comment11.target=int\ getInfectedCount()
comment12.params=
comment12.target=int\ getCol()
comment13.params=
comment13.target=int\ getRow()
comment14.params=maxCapacity
comment14.target=void\ setMaxCapacity(int)
comment14.text=\n\ @param\ maxCapacity\ the\ maxCapacity\ to\ set\n
comment15.params=isFormalShelter
comment15.target=void\ setIsFormalShelter(boolean)
comment15.text=\n\ @param\ isFormalShelter\ the\ isFormalShelter\ to\ set\n
comment16.params=showersAvailable
comment16.target=void\ setShowersAvailable(boolean)
comment16.text=\n\ @param\ showersAvailable\ the\ showersAvailable\ to\ set\n
comment17.params=laundryAvailable
comment17.target=void\ setLaundryAvailable(boolean)
comment17.text=\n\ @param\ laundryAvailable\ the\ laundryAvailable\ to\ set\n
comment18.params=medicalCareAvailable
comment18.target=void\ setMedicalCareAvailable(boolean)
comment18.text=\n\ @param\ medicalCareAvailable\ the\ medicalCareAvailable\ to\ set\n
comment19.params=h
comment19.target=boolean\ add(Host)
comment19.text=\n\ Add\ a\ new\ Host\ instance\ to\ this\ shelter\ location\ if\ there\ is\ room.\n\ \n\ @param\ h\ the\ Host\ instance\ to\ add\ to\ the\ location\n\ \n\ @return\ true\ if\ Host\ h\ was\ successfully\ added,\ false\ otherwise.\n
comment2.params=
comment2.target=boolean\ isFormalShelter()
comment2.text=\n\ @return\ the\ isFormalShelter\n
comment20.params=h
comment20.target=boolean\ remove(Host)
comment20.text=\n\ Remove\ a\ Host\ instance\ from\ this\ shelter.\n\ \n\ @param\ h\ The\ Host\ instance\ to\ remove\n\ \n\ @return\ true\ if\ the\ requested\ Host\ instance\ is\ found,\ false,\ otherwise.\n
comment21.params=
comment21.target=void\ incrementInfected()
comment22.params=
comment22.target=void\ decrementInfected()
comment23.params=
comment23.target=void\ incrementInfested()
comment24.params=
comment24.target=void\ decrementInfested()
comment25.params=
comment25.target=boolean\ checkConsistency()
comment3.params=
comment3.target=boolean\ isShowersAvailable()
comment3.text=\n\ @return\ the\ showersAvailable\n
comment4.params=
comment4.target=boolean\ isLaundryAvailable()
comment4.text=\n\ @return\ the\ laundryAvailable\n
comment5.params=
comment5.target=boolean\ isMedicalCareAvailable()
comment5.text=\n\ @return\ the\ medicalCareAvailable\n
comment6.params=
comment6.target=int\ getMaxCapacity()
comment6.text=\n\ @return\ the\ maxCapacity\n
comment7.params=
comment7.target=int\ getCurrentOccupancy()
comment7.text=\n\ Get\ the\ number\ of\ Host\ instances\ currently\ in\ this\ shelter\ location.\n\ \n\ @return\ the\ current\ occupancy\n
comment8.params=
comment8.target=java.util.ArrayList\ getCurrentOccupants()
comment8.text=\n\ Return\ the\ list\ of\ current\ occupants\ of\ this\ shelter.\n\ Not\ a\ real\ great\ idea;\ better\ if\ this\ just\ returned\ an\ iterator.\n\ \n\ @return\ The\ list\ of\ occupants.\n
comment9.params=idx
comment9.target=Host\ getOccupant(int)
comment9.text=\n\ Get\ a\ reference\ to\ one\ of\ the\ occupants\ of\ the\ shelter.\n\ \n\ @param\ idx\ index\ of\ the\ occupant\ you\ want\n\ \n\ @return\ The\ requested\ Host.\ Returns\ null\ if\ idx\ is\ out\ of\ bounds.\n
numComments=26
